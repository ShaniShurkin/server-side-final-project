{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5bb8f089",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd \n",
    "from pulp import * \n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0bcd21d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(r'C:\\Users\\User\\Desktop\\final project\\food.csv', encoding='UTF-16 LE', sep='\\t')\n",
    "#data.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f24d0d2a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4127 entries, 0 to 4126\n",
      "Data columns (total 84 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   Code                  4127 non-null   int64  \n",
      " 1   smlmitzrach           4127 non-null   int64  \n",
      " 2   category_id           3367 non-null   object \n",
      " 3   short_name_id         62 non-null     float64\n",
      " 4   shmmitzrach           4127 non-null   object \n",
      " 5   makor                 4013 non-null   float64\n",
      " 6   protein               4127 non-null   float64\n",
      " 7   total_fat             4127 non-null   float64\n",
      " 8   carbohydrates         4124 non-null   float64\n",
      " 9   food_energy           4127 non-null   int64  \n",
      " 10  alcohol               3350 non-null   float64\n",
      " 11  moisture              4082 non-null   float64\n",
      " 12  total_dietary_fiber   3836 non-null   float64\n",
      " 13  calcium               3822 non-null   float64\n",
      " 14  iron                  3789 non-null   float64\n",
      " 15  magnesium             3770 non-null   float64\n",
      " 16  phosphorus            3787 non-null   float64\n",
      " 17  potassium             3795 non-null   float64\n",
      " 18  sodium                4103 non-null   float64\n",
      " 19  zinc                  3772 non-null   float64\n",
      " 20  copper                3754 non-null   float64\n",
      " 21  vitamin_a_iu          2394 non-null   float64\n",
      " 22  carotene              3557 non-null   float64\n",
      " 23  vitamin_e             3573 non-null   float64\n",
      " 24  vitamin_c             3752 non-null   float64\n",
      " 25  thiamin               3773 non-null   float64\n",
      " 26  riboflavin            3779 non-null   float64\n",
      " 27  niacin                3772 non-null   float64\n",
      " 28  vitamin_b6            3767 non-null   float64\n",
      " 29  folate                3744 non-null   float64\n",
      " 30  folate_dfe            0 non-null      float64\n",
      " 31  vitamin_b12           3749 non-null   float64\n",
      " 32  cholesterol           4006 non-null   float64\n",
      " 33  saturated_fat         4003 non-null   float64\n",
      " 34  butyric               3571 non-null   float64\n",
      " 35  caproic               3578 non-null   float64\n",
      " 36  caprylic              3598 non-null   float64\n",
      " 37  capric                3602 non-null   float64\n",
      " 38  lauric                3630 non-null   float64\n",
      " 39  myristic              3659 non-null   float64\n",
      " 40  palmitic              3677 non-null   float64\n",
      " 41  stearic               3677 non-null   float64\n",
      " 42  oleic                 3677 non-null   float64\n",
      " 43  linoleic              3684 non-null   float64\n",
      " 44  linolenic             3677 non-null   float64\n",
      " 45  arachidonic           3595 non-null   float64\n",
      " 46  docosahexanoic        3572 non-null   float64\n",
      " 47  palmitoleic           3650 non-null   float64\n",
      " 48  parinaric             3552 non-null   float64\n",
      " 49  gadoleic              3589 non-null   float64\n",
      " 50  eicosapentaenoic      3564 non-null   float64\n",
      " 51  erucic                3570 non-null   float64\n",
      " 52  docosapentaenoic      3560 non-null   float64\n",
      " 53  mono_unsaturated_fat  3710 non-null   float64\n",
      " 54  poly_unsaturated_fat  3621 non-null   float64\n",
      " 55  vitamin_d             3420 non-null   float64\n",
      " 56  total_sugars          3859 non-null   float64\n",
      " 57  trans_fatty_acids     1527 non-null   float64\n",
      " 58  vitamin_a_re          3644 non-null   float64\n",
      " 59  isoleucine            2797 non-null   float64\n",
      " 60  leucine               2797 non-null   float64\n",
      " 61  valine                2797 non-null   float64\n",
      " 62  lysine                2798 non-null   float64\n",
      " 63  threonine             2797 non-null   float64\n",
      " 64  methionine            2797 non-null   float64\n",
      " 65  phenylalanine         2796 non-null   float64\n",
      " 66  tryptophan            2508 non-null   float64\n",
      " 67  histidine             2796 non-null   float64\n",
      " 68  tyrosine              2794 non-null   float64\n",
      " 69  arginine              2796 non-null   float64\n",
      " 70  cystine               2789 non-null   float64\n",
      " 71  serine                2792 non-null   float64\n",
      " 72  vitamin_k             3314 non-null   float64\n",
      " 73  pantothenic_acid      2938 non-null   float64\n",
      " 74  iodine                709 non-null    float64\n",
      " 75  selenium              3412 non-null   float64\n",
      " 76  sugar_alcohols        681 non-null    float64\n",
      " 77  choline               3363 non-null   float64\n",
      " 78  biotin                782 non-null    float64\n",
      " 79  manganese             2889 non-null   float64\n",
      " 80  fructose              2003 non-null   float64\n",
      " 81  tarich_ptiha          0 non-null      float64\n",
      " 82  tarich_idkun          1270 non-null   object \n",
      " 83  english_name          4126 non-null   object \n",
      "dtypes: float64(77), int64(3), object(4)\n",
      "memory usage: 2.6+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "b41a5e63",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data[['shmmitzrach','food_energy','carbohydrates','total_fat','protein']]\n",
    "#print(data.info())\n",
    "#data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "71b4e46e",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_with_null = data[data.isnull().any(axis=1)]\n",
    "#data_with_null"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a7ac3465",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.dropna()\n",
    "#data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "529c27e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "week_days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday']\n",
    "split_values = np.linspace(0,len(data),7).astype(int)\n",
    "split_values[-1] = split_values[-1]-1\n",
    "#split_values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "1faf1aee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>shmmitzrach</th>\n",
       "      <th>food_energy</th>\n",
       "      <th>carbohydrates</th>\n",
       "      <th>total_fat</th>\n",
       "      <th>protein</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>דג קרפיון אפוי עם מיץ לימון ושמן זית</td>\n",
       "      <td>213</td>\n",
       "      <td>1.5</td>\n",
       "      <td>14.3</td>\n",
       "      <td>19.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>בשר עוף, מבושל, עם אורז גזר ושמן זית</td>\n",
       "      <td>142</td>\n",
       "      <td>10.6</td>\n",
       "      <td>5.8</td>\n",
       "      <td>10.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>בשר עוף, גב, צלוי, נאכל ללא עור</td>\n",
       "      <td>239</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.2</td>\n",
       "      <td>28.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>קרמבולה, מבושלת, עם תוספת סוכר</td>\n",
       "      <td>51</td>\n",
       "      <td>8.8</td>\n",
       "      <td>0.3</td>\n",
       "      <td>1.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>סלט חציל על האש, שמיר</td>\n",
       "      <td>133</td>\n",
       "      <td>3.9</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>רוטב עגבניות מרסק עגבניות ושמן קנולה</td>\n",
       "      <td>72</td>\n",
       "      <td>9.4</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>סלט ארטישוק עם אריסה, פטרוזיליה ושמן סויה</td>\n",
       "      <td>93</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>דג הרינג כבוש/ עם בצל, תנובה, מילוז</td>\n",
       "      <td>209</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>בורקס פילו תרד, קפוא, מעדנות</td>\n",
       "      <td>299</td>\n",
       "      <td>30.0</td>\n",
       "      <td>17.7</td>\n",
       "      <td>4.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>סלט תפוחי אדמה במיונז, שטראוס</td>\n",
       "      <td>150</td>\n",
       "      <td>9.0</td>\n",
       "      <td>12.5</td>\n",
       "      <td>2.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>יוגורט 4%  שומן, דנובה, תנובה</td>\n",
       "      <td>71</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>FFQ-מתכוני ביצים (חביתה, מקושקשת, עין, שקשוקה)</td>\n",
       "      <td>169</td>\n",
       "      <td>1.8</td>\n",
       "      <td>12.7</td>\n",
       "      <td>10.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>משקה בטעמי פירות, מוכן מסירופ ללא סוכר, מרמולייט</td>\n",
       "      <td>4</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>חמין צמחוני עם ביצה,חומוס,שעועית,תפוח אדמה ושמ...</td>\n",
       "      <td>111</td>\n",
       "      <td>9.4</td>\n",
       "      <td>4.8</td>\n",
       "      <td>5.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>תפוחי אדמה, פירה, מוכן מאבקה, אריזה משפחתית, אסם</td>\n",
       "      <td>92</td>\n",
       "      <td>16.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>1.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>סלט פלפלים קלויים עם שום, מיץ לימון ושמן זית</td>\n",
       "      <td>64</td>\n",
       "      <td>3.8</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>קציצות בשר בקר, מטוגנות, ללא שמן</td>\n",
       "      <td>173</td>\n",
       "      <td>9.0</td>\n",
       "      <td>8.6</td>\n",
       "      <td>13.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>חטיף מתוק, פונדן, ממתק סוכר</td>\n",
       "      <td>373</td>\n",
       "      <td>93.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>צימוקים בציפוי שוקולד</td>\n",
       "      <td>390</td>\n",
       "      <td>65.3</td>\n",
       "      <td>14.8</td>\n",
       "      <td>4.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>אגוזי לוז טחונים, חמאת אגוזי לוז, חברת ירושלים...</td>\n",
       "      <td>634</td>\n",
       "      <td>16.7</td>\n",
       "      <td>60.7</td>\n",
       "      <td>14.9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          shmmitzrach  food_energy   \n",
       "0                דג קרפיון אפוי עם מיץ לימון ושמן זית          213  \\\n",
       "1                בשר עוף, מבושל, עם אורז גזר ושמן זית          142   \n",
       "2                     בשר עוף, גב, צלוי, נאכל ללא עור          239   \n",
       "3                      קרמבולה, מבושלת, עם תוספת סוכר           51   \n",
       "4                               סלט חציל על האש, שמיר          133   \n",
       "5                רוטב עגבניות מרסק עגבניות ושמן קנולה           72   \n",
       "6           סלט ארטישוק עם אריסה, פטרוזיליה ושמן סויה           93   \n",
       "7                 דג הרינג כבוש/ עם בצל, תנובה, מילוז          209   \n",
       "8                        בורקס פילו תרד, קפוא, מעדנות          299   \n",
       "9                       סלט תפוחי אדמה במיונז, שטראוס          150   \n",
       "10                      יוגורט 4%  שומן, דנובה, תנובה           71   \n",
       "11     FFQ-מתכוני ביצים (חביתה, מקושקשת, עין, שקשוקה)          169   \n",
       "12   משקה בטעמי פירות, מוכן מסירופ ללא סוכר, מרמולייט            4   \n",
       "13  חמין צמחוני עם ביצה,חומוס,שעועית,תפוח אדמה ושמ...          111   \n",
       "14   תפוחי אדמה, פירה, מוכן מאבקה, אריזה משפחתית, אסם           92   \n",
       "15       סלט פלפלים קלויים עם שום, מיץ לימון ושמן זית           64   \n",
       "16                   קציצות בשר בקר, מטוגנות, ללא שמן          173   \n",
       "17                        חטיף מתוק, פונדן, ממתק סוכר          373   \n",
       "18                              צימוקים בציפוי שוקולד          390   \n",
       "19  אגוזי לוז טחונים, חמאת אגוזי לוז, חברת ירושלים...          634   \n",
       "\n",
       "    carbohydrates  total_fat  protein  \n",
       "0             1.5       14.3     19.8  \n",
       "1            10.6        5.8     10.5  \n",
       "2             0.0       13.2     28.2  \n",
       "3             8.8        0.3      1.1  \n",
       "4             3.9       12.2      0.7  \n",
       "5             9.4        3.2      1.4  \n",
       "6             5.0        5.0      2.7  \n",
       "7             0.0       17.0     14.0  \n",
       "8            30.0       17.7      4.8  \n",
       "9             9.0       12.5      2.5  \n",
       "10            5.0        4.0      3.6  \n",
       "11            1.8       12.7     10.9  \n",
       "12            1.0        0.0      0.0  \n",
       "13            9.4        4.8      5.7  \n",
       "14           16.2        2.3      1.7  \n",
       "15            3.8        4.8      0.9  \n",
       "16            9.0        8.6     13.7  \n",
       "17           93.2        0.0      0.0  \n",
       "18           65.3       14.8      4.1  \n",
       "19           16.7       60.7     14.9  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def random_dataset_day():\n",
    "    frac_data = data.sample(frac=1).reset_index().drop('index',axis=1)\n",
    "    #frac_data.rename(columns={'':\"index\"}, inplace=True)\n",
    "    day_data = []\n",
    "    for s in range(len(split_values)-1):\n",
    "        day_data.append(frac_data.loc[split_values[s]:split_values[s+1]])\n",
    "    return dict(zip(week_days,day_data))\n",
    "random_dataset_day()['Sunday'].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "3a9f074a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  0, 137, 274, 412, 549, 686])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "day_meals = ['Breakfst','Snack1','Lunch','Snack2','Dinner']\n",
    "split_values_m = np.linspace(0,len(data)/len(week_days),len(day_meals)+1).astype(int)\n",
    "split_values_m[-1] = split_values_m[-1]-1\n",
    "split_values_m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "b15078b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Breakfst':                                            shmmitzrach  food_energy   \n",
       " 0         תפוחי אדמה, חטיף, צ'יפס, מעוצב, כולל פרינגלס          559  \\\n",
       " 1     בורקס בצק פריך במילוי גבינת כבשים מלוחה ומרגרינה          391   \n",
       " 2    פלפלים ממולאים אורז ובשר הודו, ברוטב עגבניות ו...          106   \n",
       " 3                                    פאי לימון עם חמאה          392   \n",
       " 4                                בצק סמבוסק ללא מילוי           301   \n",
       " ..                                                 ...          ...   \n",
       " 133            המבורגר מן הצומח, מופחת שומן/99, טבעול           145   \n",
       " 134               מקלובה עם ירקות ללא בשר עם שמן קנולה          104   \n",
       " 135                                רוטב קיסר לסלט, אסם          490   \n",
       " 136                   ביצה קשה שלמה, ללא קליפה, עם מלח          154   \n",
       " 137                       חבוש, מבושל בתוספת סוכר ומים           67   \n",
       " \n",
       "      carbohydrates  total_fat  protein  \n",
       " 0             48.9       38.4      4.4  \n",
       " 1             27.0       26.8      8.5  \n",
       " 2              9.4        5.2      4.8  \n",
       " 3             41.9       22.1      5.8  \n",
       " 4             52.5        5.0      8.0  \n",
       " ..             ...        ...      ...  \n",
       " 133            4.0        4.5     18.7  \n",
       " 134           16.7        2.8      2.1  \n",
       " 135            4.6       52.0      1.0  \n",
       " 136            1.1       10.6     12.5  \n",
       " 137           17.6        0.1      0.2  \n",
       " \n",
       " [138 rows x 5 columns],\n",
       " 'Snack1':                                            shmmitzrach  food_energy   \n",
       " 137                       חבוש, מבושל בתוספת סוכר ומים           67  \\\n",
       " 138            גבינה צפתית 16% שומן, ברינזה, תנובה, דן          224   \n",
       " 139                                    פטרוזיליה, שורש           55   \n",
       " 140                 יוגורט ביו 1.5% שומן,דנונה, שטראוס           53   \n",
       " 141                      פולי קפה אספרסו, ציפוי שוקולד          549   \n",
       " ..                                                 ...          ...   \n",
       " 270  ירקות לקט מעורב, אפונה, גזר, שעועית ירוקה, תיר...           67   \n",
       " 271  גלידת שמנת כל הטעמים מלבד שוקולד, שטראוס, נסטל...          213   \n",
       " 272                              לביבות כרובית ללא שמן          101   \n",
       " 273                    אספרגוס, טרי, עם גבעולים וקליפה           11   \n",
       " 274  בשר בקר מבושל עם חומוס ושעועית, ברוטב עגבניות ...          110   \n",
       " \n",
       "      carbohydrates  total_fat  protein  \n",
       " 137           17.6        0.1      0.2  \n",
       " 138            2.0       16.0     18.0  \n",
       " 139            8.0        0.6      2.3  \n",
       " 140            5.0        1.5      4.9  \n",
       " 141           49.6       33.2      7.4  \n",
       " ..             ...        ...      ...  \n",
       " 270           14.0        0.2      2.4  \n",
       " 271           24.7       10.9      4.0  \n",
       " 272           10.1        3.3      6.2  \n",
       " 273            2.1        0.1      1.2  \n",
       " 274            7.7        4.6      7.3  \n",
       " \n",
       " [138 rows x 5 columns],\n",
       " 'Lunch':                                            shmmitzrach  food_energy   \n",
       " 274  בשר בקר מבושל עם חומוס ושעועית, ברוטב עגבניות ...          110  \\\n",
       " 275         דוחן, מבושל, ללא תוספת שומן בבישול, עם מלח          118   \n",
       " 276                           שקדים לא קלויים, ללא מלח          579   \n",
       " 277  עוגיות גרנולה, בטעמי שוקולד/קינמון, ללא תוספת ...          464   \n",
       " 278              כיסוני בצק, רביולי במילוי ארבע גבינות          351   \n",
       " ..                                                 ...          ...   \n",
       " 408                      לחם קל, שבעה דגנים, דווידוביץ          169   \n",
       " 409                    סוכריות טופי פירות, עלית, כרמית          414   \n",
       " 410                          קישואים מטוגנים בשמן סויה           31   \n",
       " 411                   שזיף, מבושל או משומר, ללא נוזלים           89   \n",
       " 412               אגוזי פקאן, בלי קליפה, ללא תוספת מלח          691   \n",
       " \n",
       "      carbohydrates  total_fat  protein  \n",
       " 274            7.7        4.6      7.3  \n",
       " 275           22.3        1.0      3.5  \n",
       " 276            9.1       49.9     21.1  \n",
       " 277           56.5       21.1      7.8  \n",
       " 278           44.0       11.5     14.9  \n",
       " ..             ...        ...      ...  \n",
       " 408           20.7        3.2     14.3  \n",
       " 409           78.0       11.0      0.7  \n",
       " 410            2.8        1.4      1.5  \n",
       " 411           21.6        0.1      0.4  \n",
       " 412            4.3       72.0      9.2  \n",
       " \n",
       " [139 rows x 5 columns],\n",
       " 'Snack2':                                            shmmitzrach  food_energy   \n",
       " 412               אגוזי פקאן, בלי קליפה, ללא תוספת מלח          691  \\\n",
       " 413  סלט טונה במים עם בצל ירוק, מלפפון כבוש, סלרי,מ...           54   \n",
       " 414                                         מיונז רגיל          680   \n",
       " 415                  לחם קל, חיטה מלאה, עינן קל, אנג'ל          170   \n",
       " 416  שעועית ירוקה, מבושלת, טריה, ללא תוספת שומן, עם...           35   \n",
       " ..                                                 ...          ...   \n",
       " 545                                   קמח שעורה עם לתת          361   \n",
       " 546                               שניצל ברוקולי, טבעול          183   \n",
       " 547  חטיף מתוק, שוקולד, אצבעות במילוי קרם חלב, קינד...          564   \n",
       " 548                    בשר עוף, עם אורז וירקות ללא שמן          102   \n",
       " 549                               גזר אפוי עם שמן סויה          103   \n",
       " \n",
       "      carbohydrates  total_fat  protein  \n",
       " 412            4.3       72.0      9.2  \n",
       " 413            2.1        0.6     10.3  \n",
       " 414            0.6       74.8      1.0  \n",
       " 415           23.2        2.1     14.6  \n",
       " 416            4.6        0.3      1.9  \n",
       " ..             ...        ...      ...  \n",
       " 545           71.2        1.8     10.3  \n",
       " 546           13.8        9.7     10.0  \n",
       " 547           53.5       34.8      8.7  \n",
       " 548           10.3        1.7      9.5  \n",
       " 549            7.4        6.8      1.0  \n",
       " \n",
       " [138 rows x 5 columns],\n",
       " 'Dinner':                                          shmmitzrach  food_energy   \n",
       " 549                             גזר אפוי עם שמן סויה          103  \\\n",
       " 550          גרעיני חמניות עם קליפה, קלויים, ללא מלח          314   \n",
       " 551                 משמש, מבושל או משומר, ללא נוזלים           83   \n",
       " 552         דג נסיכת הנילוס, מטוגן בשמן סויה, בבלילה          207   \n",
       " 553                                    נקטר אננס, גת           49   \n",
       " ..                                               ...          ...   \n",
       " 682                        סויה, פולים קלויים עם מלח          471   \n",
       " 683  מיץ אשכוליות, קפוא, משוחזר במים, ללא תוספת סוכר           41   \n",
       " 684   FFQ-שניצלונים מעובדים, שניצל מעובד, כולל נאגטס          219   \n",
       " 685        בשר עוף ממולא אורז ועשבי תיבול ושמן קנולה          195   \n",
       " 686                                         שמן חריע          884   \n",
       " \n",
       "      carbohydrates  total_fat  protein  \n",
       " 549            7.4        6.8      1.0  \n",
       " 550           13.0       26.9     10.4  \n",
       " 551           18.6        0.1      0.6  \n",
       " 552            8.5       10.4     18.5  \n",
       " 553           12.0        0.0      0.2  \n",
       " ..             ...        ...      ...  \n",
       " 682           15.9       25.4     35.2  \n",
       " 683            9.6        0.1      0.6  \n",
       " 684           15.4       11.4     12.2  \n",
       " 685           18.5        8.4     10.0  \n",
       " 686            0.0      100.0      0.0  \n",
       " \n",
       " [138 rows x 5 columns]}"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def random_dataset_meal(day_data):\n",
    "    frac_data = day_data.sample(frac=1).reset_index().drop('index',axis=1)\n",
    "    #frac_data.rename(columns={'':\"index\"}, inplace=True)\n",
    "    meals_data = []\n",
    "    for s in range(len(split_values_m)-1):\n",
    "        meals_data.append(frac_data.loc[split_values_m[s]:split_values_m[s+1]])\n",
    "    return dict(zip(day_meals,meals_data))\n",
    "random_dataset_meal(random_dataset_day()['Sunday'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2d09319a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Protein Calories': 280,\n",
       " 'Carbohydrates Calories': 750.0,\n",
       " 'Fat Calories': 470.0}"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def build_nutritional_values(kg,calories):\n",
    "    protein_calories = kg*4\n",
    "    res_calories = calories-protein_calories\n",
    "    carb_calories = calories/2.\n",
    "    fat_calories = calories-carb_calories-protein_calories\n",
    "    res = {'Protein Calories':protein_calories,'Carbohydrates Calories':carb_calories,'Fat Calories':fat_calories}\n",
    "    return res\n",
    "build_nutritional_values(70,1500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "a375405e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Protein Grams': 70.0,\n",
       " 'Carbohydrates Grams': 187.5,\n",
       " 'Fat Grams': 52.22222222222222}"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def extract_gram(table):\n",
    "    protein_grams = table['Protein Calories']/4.\n",
    "    carbs_grams = table['Carbohydrates Calories']/4.\n",
    "    fat_grams = table['Fat Calories']/9.\n",
    "    res = {'Protein Grams':protein_grams, 'Carbohydrates Grams':carbs_grams,'Fat Grams':fat_grams}\n",
    "    return res\n",
    "extract_gram(build_nutritional_values(70,1500))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b00de2a7",
   "metadata": {},
   "source": [
    "<p>Around 10% for the snack number 1 <br/>\n",
    "Around 10% for the snack number 2 <br/>\n",
    "Around 30% for dinner <br/>\n",
    "35% for lunch <br/>\n",
    "15 % for breakfast</p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "c34ea597",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Breakfst': 0.15, 'Snack1': 0.1, 'Lunch': 0.35, 'Snack2': 0.1, 'Dinner': 0.3}"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "meal_calories = [0.15, 0.1, 0.35, 0.1, 0.3]\n",
    "calories_per_meal = dict(zip(day_meals,meal_calories))\n",
    "calories_per_meal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "df707655",
   "metadata": {},
   "outputs": [],
   "source": [
    "days_data = random_dataset_day()\n",
    "def model(prob,kg,calories,meal,meals_data):\n",
    "    calories = calories_per_meal[meal]*calories\n",
    "    G = extract_gram(build_nutritional_values(kg,calories))\n",
    "    E = G['Carbohydrates Grams']\n",
    "    F = G['Fat Grams']\n",
    "    P = G['Protein Grams']\n",
    "    meals_data = meals_data[meals_data.food_energy!=0]\n",
    "    food = meals_data.shmmitzrach.tolist()\n",
    "    c = meals_data.food_energy.tolist()\n",
    "    x = pulp.LpVariable.dicts( \"x\", indices = food, lowBound=0, upBound=1.5, cat='Continuous', indexStart=[] )\n",
    "    e = meals_data.carbohydrates.tolist()\n",
    "    f = meals_data.total_fat.tolist()\n",
    "    p = meals_data.protein.tolist()\n",
    "#    prob  = pulp.LpProblem( \"Diet\", LpMinimize )\n",
    "    prob += pulp.lpSum( [x[food[i]]*c[i] for i in range(len(food))]  )\n",
    "    prob += pulp.lpSum( [x[food[i]]*e[i] for i in range(len(x)) ] )>=E\n",
    "    prob += pulp.lpSum( [x[food[i]]*f[i] for i in range(len(x)) ] )>=F\n",
    "    prob += pulp.lpSum( [x[food[i]]*p[i] for i in range(len(x)) ] )>=P\n",
    "    prob.solve()\n",
    "    variables = []\n",
    "    values = []\n",
    "    for v in prob.variables():\n",
    "        variable = v.name\n",
    "        value = v.varValue\n",
    "        variables.append(variable)\n",
    "        values.append(value)\n",
    "    values = np.array(values).round(2).astype(float)\n",
    "    sol = pd.DataFrame(np.array([food,values]).T, columns = ['Food','Quantity'])\n",
    "    sol['Quantity'] = sol.Quantity.astype(float)\n",
    "    sol = sol[sol['Quantity']!=0.0]\n",
    "    sol.Quantity = sol.Quantity*100\n",
    "    sol = sol.rename(columns={'Quantity':'Quantity (g)'})\n",
    "    return sol\n",
    "# def total_model(kg,calories):\n",
    "#     result = []\n",
    "#     for day in week_days:\n",
    "#         prob  = pulp.LpProblem( \"Diet\", LpMinimize )\n",
    "#         print('Building a model for day %s \\n'%(day))\n",
    "#         result.append(model(prob,day,kg,calories))\n",
    "#     return dict(zip(week_days,result))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "1a1f7a26",
   "metadata": {},
   "outputs": [],
   "source": [
    "def better_model(kg,calories):\n",
    "    days_data = random_dataset_day()\n",
    "    res_model = []\n",
    "    for day in week_days:\n",
    "        day_data = days_data[day]\n",
    "        meals_data = random_dataset_meal(day_data)\n",
    "        meal_model = []\n",
    "        for meal in day_meals:\n",
    "            meal_data = meals_data[meal]\n",
    "            prob  = pulp.LpProblem( \"Diet\", LpMinimize )\n",
    "            sol_model = model(prob,kg,calories,meal,meal_data)\n",
    "            meal_model.append(sol_model)\n",
    "        res_model.append(meal_model)\n",
    "    unpacked = []\n",
    "    for i in range(len(res_model)):\n",
    "        unpacked.append(dict(zip(day_meals,res_model[i])))\n",
    "    unpacked_tot = dict(zip(week_days,unpacked))\n",
    "    return unpacked_tot\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "4680be9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "diet = better_model(44,1600)['Sunday']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8f58070c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff3b09e3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32f91b15",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
